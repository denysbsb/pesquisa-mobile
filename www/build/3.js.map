{"version":3,"sources":["../../src/pages/home/home.module.ts","../../src/pages/home/home.ts","../../node_modules/@ionic-native/email-composer/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACd;AAalC;IAAA;IAAyB,CAAC;IAAb,UAAU;QAXtB,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,uDAAQ;aACT;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,uDAAQ,CAAC;aACnC;YACD,OAAO,EAAE;gBACP,uDAAQ;aACT;SACF,CAAC;OACW,UAAU,CAAG;IAAD,iBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACfmB;AACe;AAChB;AACoB;AAU7D;IAIE,kBACU,OAAgB,EACjB,OAAsB,EACrB,aAA4B;QAF5B,YAAO,GAAP,OAAO,CAAS;QACjB,YAAO,GAAP,OAAO,CAAe;QACrB,kBAAa,GAAb,aAAa,CAAe;IAEtC,CAAC;IAED,iCAAc,GAAd;QAAA,iBAWC;QAVC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAC,SAAc;YAChD,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACd,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBAEjC,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACxB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAS,GAAT;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACvC,CAAC;IAED,4BAAS,GAAT;QAAA,iBAgBC;QAfC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAC,SAAc;YAChD,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACd,IAAI,KAAK,GAAG;oBACV,EAAE,EAAE,yBAAyB;oBAC7B,EAAE,EAAE,EAAE;oBACN,GAAG,EAAE,EAAE;oBACP,WAAW,EAAE,EAAE;oBACf,OAAO,EAAE,gBAAgB;oBACzB,IAAI,EAAE,SAAS;oBACf,MAAM,EAAE,IAAI;iBACb,CAAC;gBAEF,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IA5CU,QAAQ;QARpB,wEAAS,CAAC;YACT,IAAI,EAAE,MAAM;SACb,CAAC;QACD,gEAAS,CAAC;YACP,QAAQ,EAAE,WAAW;YACrB,WAAW,oFAAa;WACE;SAC7B,CAAC;iFAM0B;YACR,mFAAa;YACN,KAAa;OAP3B,QAAQ,CA6CpB;IAAD,CAAC;AAAA;SA7CY,QAAQ,e;;;;;;;;;;ACbrB;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACsC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC,eAAe,IAAI;AACnB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC,iBAAiB,IAAI;AACrB,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC,iBAAiB,IAAI;AACrB,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;AACA,mCAAmC;AACnC;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACO;AACR,iC","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { HomePage } from './home';\n\n@NgModule({\n  declarations: [\n    HomePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(HomePage),\n  ],\n  exports: [\n    HomePage\n  ]\n})\nexport class HomeModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\nimport { EmailComposer } from '@ionic-native/email-composer';\n\n@IonicPage({\n  name: 'home'\n})\n@Component({\n    selector: 'home-page',\n    templateUrl: 'home.html',\n    providers: [EmailComposer]\n})\nexport class HomePage {\n  nuPesuquisa: any;\n  registro: any;\n\n  constructor(\n    private storage: Storage,\n    public navCtrl: NavController,\n    private emailComposer: EmailComposer\n  ) {\n  }\n\n  ionViewDidLoad() {\n    this.storage.get('respostas').then((respostas: any) => {\n      if (respostas) {\n        this.registro = 'SIM';\n        let data = JSON.parse(respostas);\n\n        this.nuPesuquisa = data.length;\n      } else {\n        this.registro = 'NÃƒO';\n      }\n    });\n  }\n\n  startQuiz() {\n    this.navCtrl.push('PesquisadorPage');\n  }\n\n  sendEmail() {\n    this.storage.get('respostas').then((respostas: any) => {\n      if (respostas) {\n        let email = {\n          to: 'mario.eugenio@gmail.com',\n          cc: '',\n          bcc: [],\n          attachments: [],\n          subject: 'DADOS PESQUISA',\n          body: respostas,\n          isHtml: true\n        };\n\n        this.emailComposer.open(email);\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, CordovaCheck, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name Email Composer\n * @description\n *\n * Requires Cordova plugin: cordova-plugin-email-composer. For more info, please see the [Email Composer plugin docs](https://github.com/hypery2k/cordova-email-plugin).\n *\n *\n * @usage\n * ```typescript\n * import { EmailComposer } from '@ionic-native/email-composer';\n *\n * constructor(private emailComposer: EmailComposer) { }\n *\n * ...\n *\n *\n * this.emailComposer.isAvailable().then((available: boolean) =>{\n *  if(available) {\n *    //Now we know we can send\n *  }\n * });\n *\n * let email = {\n *   to: 'max@mustermann.de',\n *   cc: 'erika@mustermann.de',\n *   bcc: ['john@doe.com', 'jane@doe.com'],\n *   attachments: [\n *     'file://img/logo.png',\n *     'res://icon.png',\n *     'base64:icon.png//iVBORw0KGgoAAAANSUhEUg...',\n *     'file://README.pdf'\n *   ],\n *   subject: 'Cordova Icons',\n *   body: 'How are you? Nice greetings from Leipzig',\n *   isHtml: true\n * };\n *\n * // Send a text message using default options\n * this.emailComposer.open(email);\n * ```\n *\n * You can also assign aliases to email apps\n * ```ts\n * // add alias\n * this.email.addAlias('gmail', 'com.google.android.gm');\n *\n * // then use alias when sending email\n * this.email.open({\n *   app: 'gmail',\n *   ...\n * });\n * ```\n * @interfaces\n * EmailComposerOptions\n */\nvar EmailComposer = (function (_super) {\n    __extends(EmailComposer, _super);\n    function EmailComposer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EmailComposer_1 = EmailComposer;\n    /**\n     * Checks if the app has a permission to access email accounts information\n     * @return {Promise<boolean>} returns a promise that resolves with a boolean that indicates if the permission was granted\n     */\n    /**\n       * Checks if the app has a permission to access email accounts information\n       * @return {Promise<boolean>} returns a promise that resolves with a boolean that indicates if the permission was granted\n       */\n    EmailComposer.prototype.hasPermission = /**\n       * Checks if the app has a permission to access email accounts information\n       * @return {Promise<boolean>} returns a promise that resolves with a boolean that indicates if the permission was granted\n       */\n    function () {\n        return;\n    };\n    /**\n     * Request permission to access email accounts information\n     * @return {Promise<boolean>} returns a promise that resolves with a boolean that indicates if the permission was granted\n     */\n    /**\n       * Request permission to access email accounts information\n       * @return {Promise<boolean>} returns a promise that resolves with a boolean that indicates if the permission was granted\n       */\n    EmailComposer.prototype.requestPermission = /**\n       * Request permission to access email accounts information\n       * @return {Promise<boolean>} returns a promise that resolves with a boolean that indicates if the permission was granted\n       */\n    function () {\n        return;\n    };\n    /**\n     * Verifies if sending emails is supported on the device.\n     *\n     * @param {string} [app] App id or uri scheme.\n     * @returns {Promise<any>} Resolves if available, rejects if not available\n     */\n    /**\n       * Verifies if sending emails is supported on the device.\n       *\n       * @param {string} [app] App id or uri scheme.\n       * @returns {Promise<any>} Resolves if available, rejects if not available\n       */\n    EmailComposer.prototype.isAvailable = /**\n       * Verifies if sending emails is supported on the device.\n       *\n       * @param {string} [app] App id or uri scheme.\n       * @returns {Promise<any>} Resolves if available, rejects if not available\n       */\n    function (app) {\n        return new Promise(function (resolve, reject) {\n            if (app) {\n                EmailComposer_1.getPlugin().isAvailable(app, function (isAvailable) {\n                    if (isAvailable) {\n                        resolve();\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            }\n            else {\n                EmailComposer_1.getPlugin().isAvailable(function (isAvailable) {\n                    if (isAvailable) {\n                        resolve();\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            }\n        });\n    };\n    /**\n     * Displays the email composer pre-filled with data.\n     *\n     * @param {EmailComposerOptions} options Email\n     * @param {any} [scope] Scope for the promise\n     * @returns {Promise<any>} Resolves promise when the EmailComposer has been opened\n     */\n    /**\n       * Displays the email composer pre-filled with data.\n       *\n       * @param {EmailComposerOptions} options Email\n       * @param {any} [scope] Scope for the promise\n       * @returns {Promise<any>} Resolves promise when the EmailComposer has been opened\n       */\n    EmailComposer.prototype.open = /**\n       * Displays the email composer pre-filled with data.\n       *\n       * @param {EmailComposerOptions} options Email\n       * @param {any} [scope] Scope for the promise\n       * @returns {Promise<any>} Resolves promise when the EmailComposer has been opened\n       */\n    function (options, scope) {\n        return;\n    };\n    /**\n     * Adds a new mail app alias.\n     *\n     * @param {string} alias The alias name\n     * @param {string} packageName The package name\n     */\n    /**\n       * Adds a new mail app alias.\n       *\n       * @param {string} alias The alias name\n       * @param {string} packageName The package name\n       */\n    EmailComposer.prototype.addAlias = /**\n       * Adds a new mail app alias.\n       *\n       * @param {string} alias The alias name\n       * @param {string} packageName The package name\n       */\n    function (alias, packageName) { };\n    EmailComposer.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            successIndex: 0,\n            errorIndex: 2\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], EmailComposer.prototype, \"hasPermission\", null);\n    __decorate([\n        Cordova({\n            successIndex: 0,\n            errorIndex: 2\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], EmailComposer.prototype, \"requestPermission\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], EmailComposer.prototype, \"isAvailable\", null);\n    __decorate([\n        Cordova({\n            successIndex: 1,\n            errorIndex: 3\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], EmailComposer.prototype, \"open\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", void 0)\n    ], EmailComposer.prototype, \"addAlias\", null);\n    /**\n     * @name Email Composer\n     * @description\n     *\n     * Requires Cordova plugin: cordova-plugin-email-composer. For more info, please see the [Email Composer plugin docs](https://github.com/hypery2k/cordova-email-plugin).\n     *\n     *\n     * @usage\n     * ```typescript\n     * import { EmailComposer } from '@ionic-native/email-composer';\n     *\n     * constructor(private emailComposer: EmailComposer) { }\n     *\n     * ...\n     *\n     *\n     * this.emailComposer.isAvailable().then((available: boolean) =>{\n     *  if(available) {\n     *    //Now we know we can send\n     *  }\n     * });\n     *\n     * let email = {\n     *   to: 'max@mustermann.de',\n     *   cc: 'erika@mustermann.de',\n     *   bcc: ['john@doe.com', 'jane@doe.com'],\n     *   attachments: [\n     *     'file://img/logo.png',\n     *     'res://icon.png',\n     *     'base64:icon.png//iVBORw0KGgoAAAANSUhEUg...',\n     *     'file://README.pdf'\n     *   ],\n     *   subject: 'Cordova Icons',\n     *   body: 'How are you? Nice greetings from Leipzig',\n     *   isHtml: true\n     * };\n     *\n     * // Send a text message using default options\n     * this.emailComposer.open(email);\n     * ```\n     *\n     * You can also assign aliases to email apps\n     * ```ts\n     * // add alias\n     * this.email.addAlias('gmail', 'com.google.android.gm');\n     *\n     * // then use alias when sending email\n     * this.email.open({\n     *   app: 'gmail',\n     *   ...\n     * });\n     * ```\n     * @interfaces\n     * EmailComposerOptions\n     */\n    EmailComposer = EmailComposer_1 = __decorate([\n        Plugin({\n            pluginName: 'EmailComposer',\n            plugin: 'cordova-plugin-email-composer',\n            pluginRef: 'cordova.plugins.email',\n            repo: 'https://github.com/katzer/cordova-plugin-email-composer',\n            platforms: ['Amazon Fire OS', 'Android', 'Browser', 'iOS', 'Windows', 'macOS']\n        })\n    ], EmailComposer);\n    return EmailComposer;\n    var EmailComposer_1;\n}(IonicNativePlugin));\nexport { EmailComposer };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/email-composer/index.js\n// module id = 744\n// module chunks = 3"],"sourceRoot":""}